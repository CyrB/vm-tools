

# Add colors to shell
export LS_OPTIONS='--color=auto'
eval "`dircolors`"
alias ls='ls $LS_OPTIONS'

# Aliases
alias ll='ls -al'
alias rm='rm -i'
alias h='history'
alias r='source ~/.bashrc'

# Aliases Docker
alias dps='docker ps -a'
alias dim='docker images'
alias drm='docker ps -a|sed "1 d"|awk '"'"'{print $1}'"'"'|xargs docker rm'
alias drmi='docker images|sed "1 d"|grep \<none\>|awk '"'"'{print $3}'"'"'|sort|uniq|xargs docker rmi'
alias dstop='docker stop'
alias dstart='docker start'
alias dstopall='docker ps -a| sed "1 d" | awk '"'"'{print $1}'"'"' | xargs docker stop'
alias dstartall='docker ps -a| sed "1 d" | awk '"'"'{print $1}'"'"' | xargs docker start'
alias ddf='docker system df -v'
alias dco='docker-compose'
alias docker-full-cleanup='func_full-cleanup-docker'

# Helpful aliases
alias mountvm='sudo mkdir -p /shares ; sudo mount -t vmhgfs .host:/ /shares'
alias shrink='rm -f ~/.xsession-errors* ; sudo apt-get autoremove ; sudo apt-get clean ; sudo vmware-toolbox-cmd disk shrink /'
alias upd='sudo apt-get update ; sudo apt-get upgrade'
alias upd-atom='wget https://atom.io/download/deb -O atom-amd64.deb ; sudo dpkg -i atom-amd64.deb ; sudo apt-get -y -f install ; rm -f atom-amd64.deb'
alias upd-docker-compose='func_upd-docker-compose'
alias op-docker-compose='xdg-open https://github.com/docker/compose/releases'
alias cleanup='rm -rf ~/.local/share/Trash/* ; sudo rm -rf /tmp/* ; rm -rf ~/vm-tools ; history -c'

# Advanced aliases
dsh() {
  docker exec -it $1 bash
}

func_upd-docker-compose() {
  if [ "$#" -ne 1 ]; then
    echo "Usage: upd-docker-compose <docker-compose version>"
    echo "Use op-docker-compose to get the latest version"
  else
    sudo curl -L https://github.com/docker/compose/releases/download/$1/docker-compose-`uname -s`-`uname -m` > ./docker-compose ; sudo cp ./docker-compose /usr/local/bin/docker-compose ; sudo chmod +x /usr/local/bin/docker-compose ; rm -f ./docker-compose
  fi
}

func_full-cleanup-docker() {

  echo "WARN: This will remove everything from docker: volumes, containers and images. Will you dare? [y/N] "
  read choice

  if [ \( "$choice" == "y" \) -o \( "$choice" == "Y" \) ]
  then
    sudo echo "> Test droit sudo [OK]"
    sizea=`sudo du -sh /var/lib/docker/aufs`

    echo "Stopping all running containers"
    containers=`docker ps -a -q`
    if [ -n "$containers" ]
    then
      docker stop $containers
    fi

    echo "Removing all docker images and containers"
    docker system prune -f

    echo "Stopping Docker daemon"
    sudo service docker stop

    echo "Removing all leftovers in /var/lib/docker (bug #22207)"
    sudo rm -rf /var/lib/docker/aufs
    sudo rm -rf /var/lib/docker/image/aufs
    sudo rm -f /var/lib/docker/linkgraph.db

    echo "Starting Docker daemon"
    sudo service docker start

    sizeb=`sudo du -sh /var/lib/docker/aufs`
    echo "Size before full cleanup:"
    echo "        $sizea"
    echo "Size after full cleanup:"
    echo "        $sizeb"
  fi
}
